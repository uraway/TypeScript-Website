{"componentChunkName":"component---src-templates-tsconfig-option-one-page-tsx","path":"/tsconfig/noPropertyAccessFromIndexSignature.html","result":{"pageContext":{"title":"noPropertyAccessFromIndexSignature","lang":"en","html":"<p>This setting ensures consistency between accessing a field via the “dot” (<code>obj.key</code>) syntax, and “indexed” (<code>obj[\"key\"]</code>) and the way which the property is declared in the type.</p>\n<p>Without this flag, TypeScript will allow you to use the dot syntax to access fields which are not defined:</p>\n<pre class=\"shiki twoslash lsp\" style=\"background-color: #fff; color: black\"><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">interface</span><span style=\"color: #333333\"> <data-lsp lsp='interface GameSettings'>GameSettings</data-lsp> {</span></div><div class='line'><span style=\"color: #333333\">  </span><span style=\"color: #008000\">// Known up-front properties</span></div><div class='line'><span style=\"color: #333333\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.speed: &amp;quot;fast&amp;quot; | &amp;quot;medium&amp;quot; | &amp;quot;slow&amp;quot;'>speed</data-lsp></span><span style=\"color: #000000\">:</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"fast\"</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">|</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"medium\"</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">|</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"slow\"</span><span style=\"color: #333333\">;</span></div><div class='line'><span style=\"color: #333333\">  </span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.quality: &amp;quot;high&amp;quot; | &amp;quot;low&amp;quot;'>quality</data-lsp></span><span style=\"color: #000000\">:</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"high\"</span><span style=\"color: #333333\"> </span><span style=\"color: #000000\">|</span><span style=\"color: #333333\"> </span><span style=\"color: #A31515\">\"low\"</span><span style=\"color: #333333\">;</span></div>\n<div class='line'><span style=\"color: #333333\">  </span><span style=\"color: #008000\">// Assume anything unknown to the interface</span></div><div class='line'><span style=\"color: #333333\">  </span><span style=\"color: #008000\">// is a string.</span></div><div class='line'><span style=\"color: #333333\">  [</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(parameter) key: string'>key</data-lsp></span><span style=\"color: #000000\">:</span><span style=\"color: #333333\"> string]</span><span style=\"color: #000000\">:</span><span style=\"color: #333333\"> string;</span></div><div class='line'><span style=\"color: #333333\">}</span></div>\n<div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='function getSettings(): GameSettings'>getSettings</data-lsp></span><span style=\"color: #333333\">();</span></div><div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.speed: &amp;quot;fast&amp;quot; | &amp;quot;medium&amp;quot; | &amp;quot;slow&amp;quot;'>speed</data-lsp></span><span style=\"color: #333333\">;</span></div><span class='query'>//       ^ = (property) GameSettings.speed: \"fast\" | \"medium\" | \"slow\"</span>\n<div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.quality: &amp;quot;high&amp;quot; | &amp;quot;low&amp;quot;'>quality</data-lsp></span><span style=\"color: #333333\">;</span></div><span class='query'>//       ^ = (property) GameSettings.quality: \"high\" | \"low\"</span>\n\n<div class='line'><span style=\"color: #008000\">// Unknown key accessors are allowed on</span></div><div class='line'><span style=\"color: #008000\">// this object, and are `string`</span></div><div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='string'>username</data-lsp></span><span style=\"color: #333333\">;</span></div><span class='query'>//       ^ = string</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygCwEYsCgAmkBjAGwENpJQAzAVwDsCAXASzltAHNIGBlL529ogAUASlQBxEgFtIvBv0EBubCFABaDQWoMNa7E1oMYlEgQqSZchYlABvbKFCqA0rTgB3NtQAOayvENQb3hvGGZIRAdQRFDIXFQAIhNEBgTQAB9QBJlcJmopNMyExCIPBOVHAEdqEiImBgBPRIALJnZmwqzS93LsKNUAQUREfIoSWgaGVoFQOgBrN09QBjhl5ooDI2gTM36wJhsSaIZoA3YAOiiAbTnIJuPTgQBdVBTH9mUAXz6CVhTovhnGwAXg4XCsQNEykQgIEiHOMUgcWUqkcaNAAD0APzYGHyIHnaq1eoNFFgdGObF9VQAVVoCw8bFuDVApjMwwQh3IrKI3TioFYKjAUwOAoARgArQgMAA0rNouFZ3IABm8zsrcbDBOdqDDoLRpJAyRTKVigA'>Try</a></div></pre>\n<p>Turning the flag on will raise an error because the unknown field uses dot syntax instead of indexed syntax.</p>\n<pre class=\"shiki twoslash lsp\" style=\"background-color: #fff; color: black\"><div class='code-container'><code><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp> </span><span style=\"color: #000000\">=</span><span style=\"color: #333333\"> </span><span style=\"color: #1A1A1A\"><data-lsp lsp='function getSettings(): GameSettings'>getSettings</data-lsp></span><span style=\"color: #333333\">();</span></div><div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.speed: &amp;quot;fast&amp;quot; | &amp;quot;medium&amp;quot; | &amp;quot;slow&amp;quot;'>speed</data-lsp></span><span style=\"color: #333333\">;</span></div><div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-lsp lsp='(property) GameSettings.quality: &amp;quot;high&amp;quot; | &amp;quot;low&amp;quot;'>quality</data-lsp></span><span style=\"color: #333333\">;</span></div>\n<div class='line'><span style=\"color: #008000\">// This would need to be settings[\"username\"];</span></div><div class='line'><span style=\"color: #1A1A1A\"><data-lsp lsp='const settings: GameSettings'>settings</data-lsp></span><span style=\"color: #333333\">.</span><span style=\"color: #1A1A1A\"><data-err><data-lsp lsp='string'>username</data-lsp></data-err></span><span style=\"color: #333333\">;</span></div><span class=\"error\"><span>Property 'username' comes from an index signature, so it must be accessed with ['username'].</span><span class=\"code\">4111</span></span><span class=\"error-behind\">Property 'username' comes from an index signature, so it must be accessed with ['username'].</span><span class='query'>//       ^ = string</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEFMCdoe2gZwFygCwEYsCgQQHZwAK8ADjAC4CeAggMZ2SKIBi8AtgJL4AmkAHgGUAlgHN8AQwoBXaJGx86AGwlzQAM2n46FYXHyhRkCoOO78oxAAoAlKgDiE9pFMVzlgNzZh+CjHUSjKCOzq7uiKAA3tigoIjkkDyoAEQBiBTJoAA+oMnOPMLS7Jk5yYhKcADuyV6xAI7SEkrC1CkAFmJtJbkV1bWgANoA1pBUqOnQPqIAuuMUkxZeAL64YAC0G3TSFBtr2HT66XFmUxEAvIbGYae2XognFogAdPGQiXcPlk8NTS1UXqtQAAVDoRSpwaRKHigfBvaEUOCgABGkGOblOA2S0nu0EkzmS0w+6MeT2xMDxkC8eFiNNAAD0APxAA'>Try</a></div></pre>\n<p>The goal of this flag is to signal intent in your calling syntax about how certain you are this property exists.</p>","redirectHref":"/tsconfig#noPropertyAccessFromIndexSignature"}},"staticQueryHashes":[]}